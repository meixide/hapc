norm = "1",
predict=Xnew
)
plot(rescv$lambdas,rescv$mses)
sum(rescv$res_opt!=0)
n <- 500
p <- 1
X <- matrix(runif(n*p, 0.1, 1), n, p)
Y <- 2*sin(8*pi*(X[,1]^2))/X[,1] + rnorm(n, 0, 2)
Xnew=seq(0.5,1,length.out=100)
rescv <- cv.hapc(X, Y,
npcs = n,
log_lambda_min =-6,
log_lambda_max = -3,
norm = "1",
predict=Xnew
)
plot(rescv$lambdas,rescv$mses)
sum(rescv$res_opt!=0)
n <- 1000
p <- 1
X <- matrix(runif(n*p, 0.1, 1), n, p)
Y <- 2*sin(8*pi*(X[,1]^2))/X[,1] + rnorm(n, 0, 2)
Xnew=seq(0.5,1,length.out=100)
rescv <- cv.hapc(X, Y,
npcs = n,
log_lambda_min =-6,
log_lambda_max = -3,
norm = "1",
predict=Xnew
)
plot(rescv$lambdas,rescv$mses)
sum(rescv$res_opt!=0)
n <- 1000
p <- 1
X <- matrix(runif(n*p, 0.1, 1), n, p)
Y <- 2*sin(8*pi*(X[,1]^2))/X[,1] + rnorm(n, 0, 2)
Xnew=seq(0.5,1,length.out=100)
rescv <- cv.hapc(X, Y,
npcs = n,
log_lambda_min =-6,
log_lambda_max = -3,
norm = "1",
predict=Xnew
)
plot(rescv$lambdas,rescv$mses)
sum(rescv$res_opt!=0)
n <- 200
p <- 1
X <- matrix(runif(n*p, 0.1, 1), n, p)
Y <- 2*sin(8*pi*(X[,1]^2))/X[,1] + rnorm(n, 0, 2)
Xnew=seq(0.5,1,length.out=100)
rescv <- cv.hapc(X, Y,
npcs = n,
log_lambda_min =-6,
log_lambda_max = -3,
norm = "1",
predict=Xnew
)
plot(rescv$lambdas,rescv$mses)
sum(rescv$res_opt!=0)
n <- 200
p <- 1
X <- matrix(runif(n*p, 0.1, 1), n, p)
Y <- 2*sin(8*pi*(X[,1]^2))/X[,1] + rnorm(n, 0, 2)
Xnew=seq(0.5,1,length.out=100)
rescv <- cv.hapc(X, Y,
npcs = n,
log_lambda_min =-6,
log_lambda_max = -3,
norm = "1",
predict=Xnew
)
plot(rescv$lambdas,rescv$mses)
sum(rescv$res_opt!=0)
n <- 200
p <- 1
X <- matrix(runif(n*p, 0.1, 1), n, p)
Y <- 2*sin(8*pi*(X[,1]^2))/X[,1] + rnorm(n, 0, 2)
Xnew=seq(0.5,1,length.out=100)
rescv <- cv.hapc(X, Y,
npcs = n,
log_lambda_min =-6,
log_lambda_max = -3,
norm = "1",
predict=Xnew
)
plot(rescv$lambdas,rescv$mses)
sum(rescv$res_opt!=0)
n <- 200
p <- 1
X <- matrix(runif(n*p, 0.1, 1), n, p)
Y <- 2*sin(8*pi*(X[,1]^2))/X[,1] + rnorm(n, 0, 2)
Xnew=seq(0.5,1,length.out=100)
rescv <- cv.hapc(X, Y,
npcs = n,
log_lambda_min =-6,
log_lambda_max = -3,
norm = "1",
predict=Xnew
)
plot(rescv$lambdas,rescv$mses)
sum(rescv$res_opt!=0)
n <- 200
p <- 1
X <- matrix(runif(n*p, 0.1, 1), n, p)
Y <- 2*sin(8*pi*(X[,1]^2))/X[,1] + rnorm(n, 0, 2)
Xnew=seq(0.5,1,length.out=100)
rescv <- cv.hapc(X, Y,
npcs = n,
log_lambda_min =-6,
log_lambda_max = -3,
norm = "1",
predict=Xnew
)
plot(rescv$lambdas,rescv$mses)
sum(rescv$res_opt!=0)
n <- 200
p <- 1
X <- matrix(runif(n*p, 0.1, 1), n, p)
Y <- 2*sin(8*pi*(X[,1]^2))/X[,1] + rnorm(n, 0, 2)
Xnew=seq(0.5,1,length.out=100)
rescv <- cv.hapc(X, Y,
npcs = n,
log_lambda_min =-6,
log_lambda_max = -3,
norm = "1",
predict=Xnew
)
plot(rescv$lambdas,rescv$mses)
sum(rescv$res_opt!=0)
n <- 200
p <- 1
X <- matrix(runif(n*p, 0.1, 1), n, p)
Y <- 2*sin(8*pi*(X[,1]^2))/X[,1] + rnorm(n, 0, 2)
Xnew=seq(0.5,1,length.out=100)
rescv <- cv.hapc(X, Y,
npcs = n,
log_lambda_min =-6,
log_lambda_max = -3,
norm = "1",
predict=Xnew
)
plot(rescv$lambdas,rescv$mses)
sum(rescv$res_opt!=0)
n <- 200
p <- 1
X <- matrix(runif(n*p, 0.1, 1), n, p)
Y <- 2*sin(8*pi*(X[,1]^2))/X[,1] + rnorm(n, 0, 2)
Xnew=seq(0.5,1,length.out=100)
rescv <- cv.hapc(X, Y,
npcs = n,
log_lambda_min =-6,
log_lambda_max = -3,
norm = "1",
predict=Xnew
)
plot(rescv$lambdas,rescv$mses)
sum(rescv$res_opt!=0)
n <- 200
p <- 1
X <- matrix(runif(n*p, 0.1, 1), n, p)
Y <- 2*sin(8*pi*(X[,1]^2))/X[,1] + rnorm(n, 0, 2)
Xnew=seq(0.5,1,length.out=100)
rescv <- cv.hapc(X, Y,
npcs = n,
log_lambda_min =-6,
log_lambda_max = -3,
norm = "1",
predict=Xnew
)
plot(rescv$lambdas,rescv$mses)
sum(rescv$res_opt!=0)
n <- 200
p <- 1
X <- matrix(runif(n*p, 0.1, 1), n, p)
Y <- 2*sin(8*pi*(X[,1]^2))/X[,1] + rnorm(n, 0, 2)
Xnew=seq(0.5,1,length.out=100)
rescv <- cv.hapc(X, Y,
npcs = n,
log_lambda_min =-6,
log_lambda_max = -3,
norm = "1",
predict=Xnew
)
plot(rescv$lambdas,rescv$mses)
sum(rescv$res_opt!=0)
n <- 600
p <- 1
X <- matrix(runif(n*p, 0.1, 1), n, p)
Y <- 2*sin(8*pi*(X[,1]^2))/X[,1] + rnorm(n, 0, 2)
Xnew=seq(0.5,1,length.out=100)
rescv <- cv.hapc(X, Y,
npcs = n,
log_lambda_min =-6,
log_lambda_max = -3,
norm = "1",
predict=Xnew
)
plot(rescv$lambdas,rescv$mses)
sum(rescv$res_opt!=0)
n <- 600
p <- 1
X <- matrix(runif(n*p, 0.1, 1), n, p)
Y <- 2*sin(8*pi*(X[,1]^2))/X[,1] + rnorm(n, 0, 2)
Xnew=seq(0.5,1,length.out=100)
rescv <- cv.hapc(X, Y,
npcs = n,
log_lambda_min =-6,
log_lambda_max = -3,
norm = "1",
predict=Xnew
)
plot(rescv$lambdas,rescv$mses)
sum(rescv$res_opt!=0)
n <- 600
p <- 1
X <- matrix(runif(n*p, 0.1, 1), n, p)
Y <- 2*sin(8*pi*(X[,1]^2))/X[,1] + rnorm(n, 0, 2)
Xnew=seq(0.5,1,length.out=100)
rescv <- cv.hapc(X, Y,
npcs = n,
log_lambda_min =-6,
log_lambda_max = -3,
norm = "1",
predict=Xnew
)
plot(rescv$lambdas,rescv$mses)
sum(rescv$res_opt!=0)
n <- 600
p <- 1
X <- matrix(runif(n*p, 0.1, 1), n, p)
Y <- 2*sin(8*pi*(X[,1]^2))/X[,1] + rnorm(n, 0, 2)
Xnew=seq(0.5,1,length.out=100)
rescv <- cv.hapc(X, Y,
npcs = n,
log_lambda_min =-6,
log_lambda_max = -3,
norm = "1",
predict=Xnew
)
plot(rescv$lambdas,rescv$mses)
sum(rescv$res_opt!=0)
n <- 600
p <- 1
X <- matrix(runif(n*p, 0.1, 1), n, p)
Y <- 2*sin(8*pi*(X[,1]^2))/X[,1] + rnorm(n, 0, 2)
Xnew=seq(0.5,1,length.out=100)
rescv <- cv.hapc(X, Y,
npcs = n,
log_lambda_min =-6,
log_lambda_max = -3,
norm = "1",
predict=Xnew
)
plot(rescv$lambdas,rescv$mses)
sum(rescv$res_opt!=0)
n <- 1200
p <- 1
X <- matrix(runif(n*p, 0.1, 1), n, p)
Y <- 2*sin(8*pi*(X[,1]^2))/X[,1] + rnorm(n, 0, 2)
Xnew=seq(0.5,1,length.out=100)
rescv <- cv.hapc(X, Y,
npcs = n,
log_lambda_min =-6,
log_lambda_max = -3,
norm = "1",
predict=Xnew
)
plot(rescv$lambdas,rescv$mses)
sum(rescv$res_opt!=0)
n <- 300
p <- 1
X <- matrix(runif(n*p, 0.1, 1), n, p)
Y <- 2*sin(8*pi*(X[,1]^2))/X[,1] + rnorm(n, 0, 2)
Xnew=seq(0.5,1,length.out=100)
rescv <- cv.hapc(X, Y,
npcs = n,
log_lambda_min =-6,
log_lambda_max = -3,
norm = "1",
predict=Xnew
)
plot(rescv$lambdas,rescv$mses)
sum(rescv$res_opt!=0)
n <- 300
p <- 1
X <- matrix(runif(n*p, 0.1, 1), n, p)
Y <- 2*sin(8*pi*(X[,1]^2))/X[,1] + rnorm(n, 0, 2)
Xnew=seq(0.5,1,length.out=100)
rescv <- cv.hapc(X, Y,
npcs = n,
log_lambda_min =-6,
log_lambda_max = -3,
norm = "1",
predict=Xnew
)
plot(rescv$lambdas,rescv$mses)
sum(rescv$res_opt!=0)
n <- 1300
p <- 1
X <- matrix(runif(n*p, 0.1, 1), n, p)
Y <- 2*sin(8*pi*(X[,1]^2))/X[,1] + rnorm(n, 0, 2)
Xnew=seq(0.5,1,length.out=100)
rescv <- cv.hapc(X, Y,
npcs = n,
log_lambda_min =-6,
log_lambda_max = -3,
norm = "1",
predict=Xnew
)
plot(rescv$lambdas,rescv$mses)
sum(rescv$res_opt!=0)
n <- 1300
p <- 1
X <- matrix(runif(n*p, 0.1, 1), n, p)
Y <- 2*sin(8*pi*(X[,1]^2))/X[,1] + rnorm(n, 0, 2)
Xnew=seq(0.5,1,length.out=100)
rescv <- cv.hapc(X, Y,
npcs = n,
log_lambda_min =-6,
log_lambda_max = -3,
norm = "1",
predict=Xnew
)
plot(rescv$lambdas,rescv$mses)
sum(rescv$res_opt!=0)
n <- 1500
p <- 1
X <- matrix(runif(n*p, 0.1, 1), n, p)
Y <- 2*sin(8*pi*(X[,1]^2))/X[,1] + rnorm(n, 0, 2)
Xnew=seq(0.5,1,length.out=100)
rescv <- cv.hapc(X, Y,
npcs = n,
log_lambda_min =-6,
log_lambda_max = -3,
norm = "1",
predict=Xnew
)
plot(rescv$lambdas,rescv$mses)
sum(rescv$res_opt!=0)
n <- 50
p <- 1
X <- matrix(runif(n*p, 0.1, 1), n, p)
Y <- 2*sin(8*pi*(X[,1]^2))/X[,1] + rnorm(n, 0, 2)
Xnew=seq(0.5,1,length.out=100)
rescv <- cv.hapc(X, Y,
npcs = n,
log_lambda_min =-6,
log_lambda_max = -3,
norm = "1",
predict=Xnew
)
plot(rescv$lambdas,rescv$mses)
sum(rescv$res_opt!=0)
n <- 50
p <- 1
X <- matrix(runif(n*p, 0.1, 1), n, p)
Y <- 2*sin(8*pi*(X[,1]^2))/X[,1] + rnorm(n, 0, 2)
Xnew=seq(0.5,1,length.out=100)
rescv <- cv.hapc(X, Y,
npcs = n,
log_lambda_min =-6,
log_lambda_max = -3,
norm = "1",
predict=Xnew
)
plot(rescv$lambdas,rescv$mses)
sum(rescv$res_opt!=0)
c(50,100,200,500,600,1000,1200,1300,1500,34)
c(9,13,15,20,23,24,29,32)
n=c(50,100,200,500,600,1000,1200,1300,1500,34)
taken=c(9,13,15,20,23,24,29,32)
plot(log(n),log(taken))
n=c(50,100,200,300,500,600,1000,1200,1300,1500)
taken=c(9,13,15,16,20,23,24,29,32,34)
plot(log(n),log(taken))
summary(lm(log(n) ~ log(taken)))
summary(lm(log(taken) ~ log(n)))
set.seed(1)
n <- 200
p <- 20
X <- matrix(runif(n*p, 0, 1), n, p)
devtools::document()    # Generate documentation from roxygen2 comments
setwd("~/Projects/hapc")
devtools::document()    # Generate documentation from roxygen2 comments
devtools::build()
k2=kernel.hapc(X,2)
View(k2)
lk2=log(K2)
lk2=log(k2)
eigen(lk2)
E2=eigen(lk2)
View(E2)
E=eigen(k2)
View(E)
View(E2)
View(E)
View(E2)
View(E2)
plot(E$vectors[,1],E2$vectors[,1])
plot(E$vectors[,1],E2$vectors[,1])
abline(a=0,b=1)
plot(E$vectors[,2],E2$vectors[,2])
plot(E$vectors[,3],E2$vectors[,3])
devtools::document()    # Generate documentation from roxygen2 comments
devtools::build()
kernel.hapc(X,2)
devtools::document()    # Generate documentation from roxygen2 comments
devtools::build()
kernel.hapc(X,2)
n <- 500
p <- 20
X <- matrix(runif(n*p, 0, 1), n, p)
kernel.hapc(X,2)
# ---- 2) build HAL design matrix H ----
# include intercept + linear terms + all positive-part hinges at observed knots
library('hal9001')
hal <- enumerate_basis(
x                   = X,
max_degree          = 2,
smoothness_orders   = rep(0, p),        # indicator basis
include_lower_order = TRUE
)
H      <- as.matrix(make_design_matrix(X,   hal, p_reserve = 1))  # n  × q
library('hapc')
k1=H%*%t(H)
View(k1)
n <- 50
p <- 20
X <- matrix(runif(n*p, 0, 1), n, p)
# ---- 2) build HAL design matrix H ----
# include intercept + linear terms + all positive-part hinges at observed knots
library('hal9001')
hal <- enumerate_basis(
x                   = X,
max_degree          = 2,
smoothness_orders   = rep(0, p),        # indicator basis
include_lower_order = TRUE
)
H      <- as.matrix(make_design_matrix(X,   hal, p_reserve = 1))  # n  × q
library('hapc')
k1=H%*%t(H)
k2=kernel.hapc(X,2)
devtools::document()    # Generate documentation from roxygen2 comments
devtools::build()
k1=H%*%t(H)
k2=kernel.hapc(X,2)
n <- 500
p <- 20
X <- matrix(runif(n*p, 0, 1), n, p)
# include intercept + linear terms + all positive-part hinges at observed knots
library('hal9001')
hal <- enumerate_basis(
x                   = X,
max_degree          = 2,
smoothness_orders   = rep(0, p),        # indicator basis
include_lower_order = TRUE
)
H      <- as.matrix(make_design_matrix(X,   hal, p_reserve = 1))  # n  × q
library('hapc')
k1=H%*%t(H)
ncol(k1)
k2=kernel.hapc(X,2)
max(abs(k1-k2))
n <- 500
p <- 50
X <- matrix(runif(n*p, 0, 1), n, p)
kernel.hapc(X,1)
View(k2)
hist(k2)
hist(log(k2))
library(hal9001)
library(glmnet)
set.seed(123)
beta_true <- 2
n_values <- c(10, 100, 200, 500, 1000, 2000)
fractions <- numeric(length(n_values))
library(hal9001)
library(glmnet)
set.seed(123)
beta_true <- 2
n_values <- c(10, 100, 200, 500, 1000, 2000)
fractions <- numeric(length(n_values))
norm2 <- numeric(length(n_values))
for (i in seq_along(n_values)) {
n <- n_values[i]
X <- matrix(runif(n, 0, 1), ncol = 1)
Y <- beta_true * X
d <- 1
hal <- enumerate_basis(
x                   = X,
max_degree          = d,
smoothness_orders   = rep(0, d),   # indicator basis
include_lower_order = TRUE
)
H <- as.matrix(make_design_matrix(X, hal, p_reserve = 1))
s <- svd(H)
V <- s$v
cols <- H %*% V
tvec <- t(cols) %*% Y
lambda <- 0.01
alpha <- sign(tvec) * pmax(abs(tvec) - lambda * n, 0) / (s$d)^2
fractions[i] <- sum(abs(V %*% alpha)) / sum(abs(alpha))
norm2[i] = sum(alpha^2)
}
data.frame(n = n_values, fraction = fractions)
plot(log(n_values),log(fractions))
summary(lm(log(fractions)~log(n_values)))
plot(log(n_values),log(norm2))
summary(lm(log(norm2)~log(n_values)))
alpha
